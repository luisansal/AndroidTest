apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.luisansal.jetpack"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

project.ext {
    daggerVersion = "2.21"
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'com.google.android.material:material:1.1.0-alpha03'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    def lifecycle_version = "2.1.0-alpha02"
    def room_version = "2.1.0-alpha04"
    def work_version = "1.0.0-beta03"
    def paging_version = "2.1.0"

    // ViewModel and LiveData
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    // alternatively - just ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version" // use -ktx for Kotlin
//    // alternatively - just LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
//    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
//    //     AndroidX libraries use this lightweight import for Lifecycle
//    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//
    // Lifecycle components
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // use kapt for Kotlin
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    //implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    //implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version" // use -ktx for Kotlin

    //Play Maps Services
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-places:16.0.0'

    // Room components
    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    androidTestImplementation "androidx.room:room-testing:$room_version"

    //Work manager
    implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin+Coroutines

    // optional - Test helpers
    androidTestImplementation "android.arch.work:work-testing:$work_version"

    //Paging
    implementation "androidx.paging:paging-runtime:$paging_version" // use -ktx for Kotlin
    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common:$paging_version" // use -ktx for Kotlin
    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$paging_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version" // use -ktx for Kotlin

    // Dagger Core
    implementation "com.google.dagger:dagger:$project.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"

    //Dagger para propositos de Test de Integracion
    kaptAndroidTest "com.google.dagger:dagger-compiler:$project.daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$project.daggerVersion"

    //Habilita la libreria JUnit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'

    //Habilita el uso de test Rules
    testImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    //Herramientas de core para test unitarios, instrumentacion y UI
    testImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test:core:1.1.0'

    //Herramientas de test para uso de Instrumentacion y UI
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //Habilita el rule InstantTaskExecutorRule
    testImplementation "android.arch.core:core-testing:1.1.1"
    androidTestImplementation "android.arch.core:core-testing:1.1.1"

    //Mockito
    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'org.mockito:mockito-android:2.18.0'

    //Roboelectric
    testImplementation 'org.robolectric:robolectric:4.2'

    //Herramienta que provee clases para test de Fragments
    debugImplementation 'androidx.fragment:fragment-testing:1.1.0-alpha05'

}
repositories {
    mavenCentral()
}
